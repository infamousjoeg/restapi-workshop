{"componentChunkName":"component---gatsby-theme-mdx-deck-src-templates-deck-js","path":"/","matchPath":"/*","result":{"data":{"deck":{"id":"941c75f2-926e-5c61-b0b7-92b965cf83c5","body":"function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsx mdx */\nvar theme = cyberark;\nvar city = \"World Wide Web\";\nvar presenter = \"Joe Garcia\";\nvar title = \"DevOps Security Engineer\";\nvar _frontmatter = {};\n\nvar makeShortcode = function makeShortcode(name) {\n  return function MDXDefaultShortcode(props) {\n    console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n    return mdx(\"div\", props);\n  };\n};\n\nvar layoutProps = {\n  theme: theme,\n  city: city,\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(Head, {\n    mdxType: \"Head\"\n  }, mdx(\"title\", null, \"CyberArk REST API Workshop - \", city), mdx(\"link\", {\n    rel: \"shortcut icon\",\n    href: \"./src/icons/favicon.ico\",\n    type: \"image/ico\"\n  }), mdx(\"link\", {\n    href: \"./src/fonts/stylesheet.css\",\n    rel: \"stylesheet\"\n  }), mdx(\"link\", {\n    href: \"https://fonts.googleapis.com/css?family=Source+Code+Pro|Source+Sans+Pro|Source+Serif+Pro&display=swap\",\n    rel: \"stylesheet\"\n  })), mdx(\"h1\", null, \"REST API Workshop\"), mdx(\"h2\", null, city), mdx(\"p\", null, \"Presented by \", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"https://cyberark.com\"\n  }), \"CyberArk\")), mdx(\"hr\", null), mdx(\"h1\", null, \"Hello \\uD83D\\uDC4B\\uD83C\\uDFFB\"), mdx(\"h2\", null, \"I am \", presenter), mdx(\"h3\", null, title, \" for \", mdx(\"a\", {\n    href: \"https://cyberark.com\"\n  }, \"CyberArk\")), mdx(\"hr\", null), mdx(\"h1\", null, \"Agenda \\uD83D\\uDD59\"), mdx(\"h2\", null, \"Hour 1\\uFE0F\\u20E3\"), mdx(\"ul\", null, mdx(Appear, {\n    mdxType: \"Appear\"\n  }, mdx(\"li\", null, \"You know everything up until now\"), mdx(\"li\", null, \"Go over agenda - which is happening now\"), mdx(\"li\", null, \"v9 to v10 API changes\"), mdx(\"li\", null, \"Explore available support tools\"), mdx(\"li\", null, \"Both CyberArk & community\"))), mdx(\"hr\", null), mdx(\"h1\", null, \"Agenda \\uD83D\\uDD59\"), mdx(\"h2\", null, \"Hour 2\\uFE0F\\u20E3\"), mdx(\"ul\", null, mdx(Appear, {\n    mdxType: \"Appear\"\n  }, mdx(\"li\", null, \"Postman Deep Dive\"), mdx(\"li\", null, \"psPAS Deep Dive\"))), mdx(\"hr\", null), mdx(\"h1\", null, \"Agenda \\uD83D\\uDD59\"), mdx(\"h2\", null, \"LUNCH! (30 minutes)\"), mdx(\"h1\", null, \"\\uD83C\\uDF54\"), mdx(\"hr\", null), mdx(\"h1\", null, \"Agenda \\uD83D\\uDD59\"), mdx(\"h2\", null, \"Hour 3\\uFE0F\\u20E3\"), mdx(\"ul\", null, mdx(Appear, {\n    mdxType: \"Appear\"\n  }, mdx(\"li\", null, \"SkyTap Environment Overview\"), mdx(\"li\", null, \"Create Function for Role-Based Security Groups\"))), mdx(\"hr\", null), mdx(\"h1\", null, \"Agenda \\uD83D\\uDD59\"), mdx(\"h2\", null, \"Hour 4\\uFE0F\\u20E3\"), mdx(\"ul\", null, mdx(Appear, {\n    mdxType: \"Appear\"\n  }, mdx(\"li\", null, \"Create Safe & Safe Members Script \", mdx(\"i\", null, \"(CyberArk Safe Factory)\")), mdx(\"li\", null, \"Q&A Session\"))), mdx(\"hr\", null), mdx(\"h1\", null, \"v9 -> v10 API Changes\"), mdx(\"ul\", null, mdx(Appear, {\n    mdxType: \"Appear\"\n  }, mdx(\"li\", null, \"Change from \", mdx(\"b\", null, \"/WebServices/\"), \" to \", mdx(\"b\", null, \"/api/\"), \" URI\"), mdx(\"li\", null, \"PVWA UI in v10 \", mdx(\"i\", null, \"uses\"), \" the same REST API exposed to customers\"), mdx(\"li\", null, \"As new features appear in PVWA, they will be available in our REST API\"), mdx(\"li\", null, \"No... I don't know when we can Move Accounts via REST API \\uD83D\\uDE41\"), mdx(\"li\", null, \"I also don't know when we'll be able to automate linked accounts like Logon & Reconcile \\uD83D\\uDE2B\"))), mdx(\"hr\", null), mdx(\"h1\", null, \"Exploring Support Tools \\uD83D\\uDEE0\"), mdx(\"h2\", null, \"CyberArk Supported Tools\"), mdx(\"hr\", null), mdx(\"h1\", null, \"epv-api-scripts\"), mdx(\"ul\", null, mdx(Appear, {\n    mdxType: \"Appear\"\n  }, mdx(\"li\", null, \"Contains CyberArk Supported Examples\"), mdx(\"li\", null, \"Account Onboarding Utility\"), mdx(\"li\", null, \"Automatic Onboarding Rules\"), mdx(\"li\", null, \"PSM, Platforms, Security Events, and more!\"))), mdx(\"hr\", null), mdx(\"h1\", null, \"epv-api-scripts\"), mdx(\"p\", null, mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"https://github.com/cyberark/epv-api-scripts\"\n  }), \"Go to https://github.com/cyberark/epv-api-scripts\")), mdx(\"hr\", null), mdx(\"h1\", null, \"Account Onboarding Utility\"), mdx(\"ul\", null, mdx(Appear, {\n    mdxType: \"Appear\"\n  }, mdx(\"li\", null, \"Supported by CyberArk R&D\"), mdx(\"li\", null, \"Supports v9.8 and above of PVWA\"), mdx(\"li\", null, \"Supports basic account and safe creation, much like PUU\"))), mdx(\"hr\", null), mdx(CodeSurfer, {\n    mdxType: \"CodeSurfer\"\n  }, mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-powershell\",\n    \"metastring\": \"title=\\\"Create Command\\\" subtitle=\\\"Creates safes and accounts\\\"\",\n    \"title\": \"\\\"Create\",\n    \"Command\\\"\": true,\n    \"subtitle\": \"\\\"Creates\",\n    \"safes\": true,\n    \"and\": true,\n    \"accounts\\\"\": true\n  }), \"Accounts_Onboard_Utility.ps1 `\\n  # PVWA Base URL\\n  -PVWAURL https://components.cyberarkdemo.com `\\n  # Method\\n  -Create `\\n  # Authentication Type: cyberark, ldap, windows, saml, radius (all methods)\\n  -AuthType ldap `\\n  # Safe name to copy permissions from when creating a new safe (optional)\\n  -TemplateSafe WinLocalTemplate `\\n  # Path to the CSV containing account metadata\\n  -CsvPath \\\"${env:userprofile}\\\\Documents\\\\cyberark-import.csv\\\"\\n\")), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-diff\",\n    \"metastring\": \"4:5 title=\\\"Create Command\\\" subtitle=\\\"This is the parameter to set to create\\\"\",\n    \"4:5\": true,\n    \"title\": \"\\\"Create\",\n    \"Command\\\"\": true,\n    \"subtitle\": \"\\\"This\",\n    \"is\": true,\n    \"the\": true,\n    \"parameter\": true,\n    \"to\": true,\n    \"set\": true,\n    \"create\\\"\": true\n  }), \"\")), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-powershell\",\n    \"metastring\": \"title=\\\"Update Command\\\" subtitle=\\\"Updates accounts or creates safes and accounts\\\"\",\n    \"title\": \"\\\"Update\",\n    \"Command\\\"\": true,\n    \"subtitle\": \"\\\"Updates\",\n    \"accounts\": true,\n    \"or\": true,\n    \"creates\": true,\n    \"safes\": true,\n    \"and\": true,\n    \"accounts\\\"\": true\n  }), \"Accounts_Onboard_Utility.ps1 `\\n  # PVWA Base URL\\n  -PVWAURL https://components.cyberarkdemo.com `\\n  # Change the method to Update and everything can stay the same\\n  -Update `\\n  # Authentication Type: cyberark, ldap, windows, saml, radius (all methods)\\n  -AuthType ldap `\\n  # Safe name to copy permissions from when creating a new safe (optional)\\n  -TemplateSafe WinLocalTemplate `\\n  # Path to the CSV containing account metadata\\n  -CsvPath \\\"${env:userprofile}\\\\Documents\\\\cyberark-import.csv\\\"\\n\"))), mdx(\"hr\", null), mdx(\"h1\", null, \"CyberArk Online Documentation\"), mdx(\"p\", null, mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"https://docs.cyberark.com\"\n  }), \"https://docs.cyberark.com\")), mdx(\"hr\", null), mdx(\"h1\", null, \"Swagger UI\"), mdx(\"ul\", null, mdx(Appear, {\n    mdxType: \"Appear\"\n  }, mdx(\"li\", null, \"Accessed at \", mdx(\"u\", null, \"https://pvwa.yourdomain.com/PasswordVault/swagger\")), mdx(\"li\", null, \"Similar to Postman Documentation & Collection\"), mdx(\"li\", null, \"Built into Password Vault Web Access (PVWA)\"), mdx(\"li\", null, \"Only shows relevant API endpoints for the PVWA version\"))), mdx(\"hr\", null), mdx(\"h1\", null, \"Exploring Support Tools \\uD83D\\uDEE0\"), mdx(\"h2\", null, \"Community Contributed Tools\"), mdx(\"hr\", null), mdx(\"h2\", null, \"CyberArk Automation Greatest Hits\"), mdx(\"p\", null, mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"https://cybr.rocks/greatesthits\"\n  }), \"https://cybr.rocks/greatesthits\")), mdx(\"hr\", null), mdx(\"h1\", null, \"Postman\"), mdx(\"p\", null, \"Documentation available online at \", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"https://cybr.rocks/RESTAPI\"\n  }), \"https://cybr.rocks/RESTAPI\")), mdx(\"p\", null, \"Collection available for use in Postman app\"), mdx(\"p\", null, mdx(\"em\", {\n    parentName: \"p\"\n  }, \"Shown via Live Demo\")), mdx(\"hr\", null), mdx(\"h1\", null, \"psPAS\"), mdx(\"ul\", null, mdx(Appear, {\n    mdxType: \"Appear\"\n  }, mdx(\"li\", null, mdx(\"h2\", null, \"What is it?\"))), mdx(\"ul\", null, mdx(Appear, {\n    mdxType: \"Appear\"\n  }, mdx(\"li\", null, \"PowerShell Module\"), mdx(\"li\", null, \"Maintained by psPete\"), mdx(\"li\", null, \"Creates easy cmdlets to deal with CyberArk's API\")))), mdx(\"hr\", null), mdx(CodeSurfer, {\n    mdxType: \"CodeSurfer\"\n  }, mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-powershell\",\n    \"metastring\": \"title=\\\"How to install psPAS\\\" subtitle=\\\"psPAS is available on the PowerShell Gallery\\\"\",\n    \"title\": \"\\\"How\",\n    \"to\": true,\n    \"install\": true,\n    \"psPAS\\\"\": true,\n    \"subtitle\": \"\\\"psPAS\",\n    \"is\": true,\n    \"available\": true,\n    \"on\": true,\n    \"the\": true,\n    \"PowerShell\": true,\n    \"Gallery\\\"\": true\n  }), \"Install-Module psPAS\\n\")), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-powershell\",\n    \"metastring\": \"title=\\\"How to update psPAS\\\" subtitle=\\\"Updating is as easy as installing\\\"\",\n    \"title\": \"\\\"How\",\n    \"to\": true,\n    \"update\": true,\n    \"psPAS\\\"\": true,\n    \"subtitle\": \"\\\"Updating\",\n    \"is\": true,\n    \"as\": true,\n    \"easy\": true,\n    \"installing\\\"\": true\n  }), \"Update-Module psPAS\\n\"))), mdx(\"hr\", null), mdx(\"h1\", null, \"psPAS\"), mdx(\"h2\", null, \"Features\"), mdx(\"ul\", null, mdx(Appear, {\n    mdxType: \"Appear\"\n  }, mdx(\"li\", null, \"Token-less session authorization\"), mdx(\"li\", null, \"Supports push, append & challenge/response MFA\"), mdx(\"li\", null, \"Supports piping to simplify commands\"))), mdx(\"hr\", null), mdx(\"h1\", null, \"psPAS\"), mdx(\"h2\", null, \"Example One-Liners & Scripts\"), mdx(\"p\", null, \"This will be covered later during our \", mdx(\"em\", {\n    parentName: \"p\"\n  }, \"psPAS Deep Dive\"), \".\"), mdx(\"hr\", null), mdx(CodeSurfer, {\n    mdxType: \"CodeSurfer\"\n  }, mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-powershell\",\n    \"metastring\": \"title=\\\"Token-less Session Authorization\\\" subtitle=\\\"After successful authentication, token is held in session\\\"\",\n    \"title\": \"\\\"Token-less\",\n    \"Session\": true,\n    \"Authorization\\\"\": true,\n    \"subtitle\": \"\\\"After\",\n    \"successful\": true,\n    \"authentication,\": true,\n    \"token\": true,\n    \"is\": true,\n    \"held\": true,\n    \"in\": true,\n    \"session\\\"\": true\n  }), \"# Since token is stored in the session, no need to save\\n# the response in a variable for reference later.\\nNew-PASSession -BaseURI https://components.cyberarkdemo.com -Type ldap -Credentials $(Get-Credentials)\\n\")), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"3\": true,\n    \"className\": \"language-diff\",\n    \"metastring\": \"3 title=\\\"Parameters\\\" subtitle=\\\"BaseURI, Type, and Credentials are required\\\"\",\n    \"title\": \"\\\"Parameters\\\"\",\n    \"subtitle\": \"\\\"BaseURI,\",\n    \"Type,\": true,\n    \"and\": true,\n    \"Credentials\": true,\n    \"are\": true,\n    \"required\\\"\": true\n  }), \"\")), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-diff\",\n    \"metastring\": \"3[72:103] title=\\\"PSCredential Object\\\" subtitle=\\\"psPAS requires a PSCredential Object for security\\\"\",\n    \"3[72:103]\": true,\n    \"title\": \"\\\"PSCredential\",\n    \"Object\\\"\": true,\n    \"subtitle\": \"\\\"psPAS\",\n    \"requires\": true,\n    \"a\": true,\n    \"PSCredential\": true,\n    \"Object\": true,\n    \"for\": true,\n    \"security\\\"\": true\n  }), \"\")), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-diff\",\n    \"metastring\": \"3[85:103] title=\\\"PSCredential Object\\\" subtitle=\\\"This will prompt the user for their username & password\\\"\",\n    \"3[85:103]\": true,\n    \"title\": \"\\\"PSCredential\",\n    \"Object\\\"\": true,\n    \"subtitle\": \"\\\"This\",\n    \"will\": true,\n    \"prompt\": true,\n    \"the\": true,\n    \"user\": true,\n    \"for\": true,\n    \"their\": true,\n    \"username\": true,\n    \"&\": true,\n    \"password\\\"\": true\n  }), \"\"))), mdx(\"hr\", null), mdx(CodeSurfer, {\n    mdxType: \"CodeSurfer\"\n  }, mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-powershell\",\n    \"metastring\": \"title=\\\"MFA Support\\\" subtitle=\\\"Push Mode\\\"\",\n    \"title\": \"\\\"MFA\",\n    \"Support\\\"\": true,\n    \"subtitle\": \"\\\"Push\",\n    \"Mode\\\"\": true\n  }), \"New-PASSession -BaseURI https://components.cyberarkdemo.com -Type radius -Credentials $(Get-Credentials)\\n\")), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"2\": true,\n    \"className\": \"language-powershell\",\n    \"metastring\": \"2 title=\\\"MFA Support\\\" subtitle=\\\"Append Mode\\\"\",\n    \"title\": \"\\\"MFA\",\n    \"Support\\\"\": true,\n    \"subtitle\": \"\\\"Append\",\n    \"Mode\\\"\": true\n  }), \"New-PASSession -BaseURI https://components.cyberarkdemo.com -Type radius -Credentials $(Get-Credentials) `\\n    -OTPMode Append -OTP 123456\\n\")), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"2\": true,\n    \"className\": \"language-powershell\",\n    \"metastring\": \"2 title=\\\"MFA Support\\\" subtitle=\\\"Challenge/Response Mode\\\"\",\n    \"title\": \"\\\"MFA\",\n    \"Support\\\"\": true,\n    \"subtitle\": \"\\\"Challenge/Response\",\n    \"Mode\\\"\": true\n  }), \"New-PASSession -BaseURI https://components.cyberarkdemo.com -Type radius -Credentials $(Get-Credentials) `\\n    -OTPMode Challenge -OTP 123456\\n\"))), mdx(\"hr\", null), mdx(CodeSurfer, {\n    mdxType: \"CodeSurfer\"\n  }, mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-powershell\",\n    \"metastring\": \"title=\\\"Piping Support for Advanced Users\\\" subtitle=\\\"List Safe Members by Specific Permission\\\"\",\n    \"title\": \"\\\"Piping\",\n    \"Support\": true,\n    \"for\": true,\n    \"Advanced\": true,\n    \"Users\\\"\": true,\n    \"subtitle\": \"\\\"List\",\n    \"Safe\": true,\n    \"Members\": true,\n    \"by\": true,\n    \"Specific\": true,\n    \"Permission\\\"\": true\n  }), \"Get-PASSafe -query D-Nix | Get-PASSafeMember | Where-Object { $_.Permissions -contains 'Add' }\\n\")), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-diff\",\n    \"metastring\": \"1[1:25] title=\\\"Piping Support for Advanced Users\\\" subtitle=\\\"First: Get all safes matching our query\\\"\",\n    \"1[1:25]\": true,\n    \"title\": \"\\\"Piping\",\n    \"Support\": true,\n    \"for\": true,\n    \"Advanced\": true,\n    \"Users\\\"\": true,\n    \"subtitle\": \"\\\"First:\",\n    \"Get\": true,\n    \"all\": true,\n    \"safes\": true,\n    \"matching\": true,\n    \"our\": true,\n    \"query\\\"\": true\n  }), \"\")), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-diff\",\n    \"metastring\": \"1[28:45] title=\\\"Piping Support for Advanced Users\\\" subtitle=\\\"Second: Get all Safe Members for all safes returned\\\"\",\n    \"1[28:45]\": true,\n    \"title\": \"\\\"Piping\",\n    \"Support\": true,\n    \"for\": true,\n    \"Advanced\": true,\n    \"Users\\\"\": true,\n    \"subtitle\": \"\\\"Second:\",\n    \"Get\": true,\n    \"all\": true,\n    \"Safe\": true,\n    \"Members\": true,\n    \"safes\": true,\n    \"returned\\\"\": true\n  }), \"\")), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-diff\",\n    \"metastring\": \"1[48:95] title=\\\"Piping Support for Advanced Users\\\" subtitle=\\\"Finally: Return only Safe Members having any 'Add' permission\\\"\",\n    \"1[48:95]\": true,\n    \"title\": \"\\\"Piping\",\n    \"Support\": true,\n    \"for\": true,\n    \"Advanced\": true,\n    \"Users\\\"\": true,\n    \"subtitle\": \"\\\"Finally:\",\n    \"Return\": true,\n    \"only\": true,\n    \"Safe\": true,\n    \"Members\": true,\n    \"having\": true,\n    \"any\": true,\n    \"'Add'\": true,\n    \"permission\\\"\": true\n  }), \"\")), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-diff\",\n    \"metastring\": \"1[63:65] title=\\\"Piping Support for Advanced Users\\\" subtitle=\\\"This references our object being piped\\\"\",\n    \"1[63:65]\": true,\n    \"title\": \"\\\"Piping\",\n    \"Support\": true,\n    \"for\": true,\n    \"Advanced\": true,\n    \"Users\\\"\": true,\n    \"subtitle\": \"\\\"This\",\n    \"references\": true,\n    \"our\": true,\n    \"object\": true,\n    \"being\": true,\n    \"piped\\\"\": true\n  }), \"\"))), mdx(\"hr\", null), mdx(CodeSurfer, {\n    mdxType: \"CodeSurfer\"\n  }, mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-powershell\",\n    \"metastring\": \"title=\\\"Piping Support for Advanced Users\\\" subtitle=\\\"List Safes Username is NOT a Member Of\\\"\",\n    \"title\": \"\\\"Piping\",\n    \"Support\": true,\n    \"for\": true,\n    \"Advanced\": true,\n    \"Users\\\"\": true,\n    \"subtitle\": \"\\\"List\",\n    \"Safes\": true,\n    \"Username\": true,\n    \"is\": true,\n    \"NOT\": true,\n    \"a\": true,\n    \"Member\": true,\n    \"Of\\\"\": true\n  }), \"Get-PASSafe | ForEach-Object { \\n    if ($(Get-PASSafeMember -SafeName $_.SafeName) -notcontains \\\"CyberArk_Vault_Admins\\\") {\\n        Write-Output $_.SafeName\\n    }\\n}\\n\")), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-diff\",\n    \"metastring\": \"1[1:12] title=\\\"Piping Support for Advanced Users\\\" subtitle=\\\"First: Get all safes\\\"\",\n    \"1[1:12]\": true,\n    \"title\": \"\\\"Piping\",\n    \"Support\": true,\n    \"for\": true,\n    \"Advanced\": true,\n    \"Users\\\"\": true,\n    \"subtitle\": \"\\\"First:\",\n    \"Get\": true,\n    \"all\": true,\n    \"safes\\\"\": true\n  }), \"\")), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-diff\",\n    \"metastring\": \"1[15:31] title=\\\"Piping Support for Advanced Users\\\" subtitle=\\\"For each object returned...\\\"\",\n    \"1[15:31]\": true,\n    \"title\": \"\\\"Piping\",\n    \"Support\": true,\n    \"for\": true,\n    \"Advanced\": true,\n    \"Users\\\"\": true,\n    \"subtitle\": \"\\\"For\",\n    \"each\": true,\n    \"object\": true,\n    \"returned...\\\"\": true\n  }), \"\")), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"2\": true,\n    \"className\": \"language-diff\",\n    \"metastring\": \"2 title=\\\"Piping Support for Advanced Users\\\" subtitle=\\\"... if CyberArk_Vault_Admins is not a member of the safe...\\\"\",\n    \"title\": \"\\\"Piping\",\n    \"Support\": true,\n    \"for\": true,\n    \"Advanced\": true,\n    \"Users\\\"\": true,\n    \"subtitle\": \"\\\"...\",\n    \"if\": true,\n    \"CyberArk_Vault_Admins\": true,\n    \"is\": true,\n    \"not\": true,\n    \"a\": true,\n    \"member\": true,\n    \"of\": true,\n    \"the\": true,\n    \"safe...\\\"\": true\n  }), \"\")), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"3\": true,\n    \"className\": \"language-diff\",\n    \"metastring\": \"3 title=\\\"Piping Support for Advanced Users\\\" subtitle=\\\"Write the safe name to output for our audit report\\\"\",\n    \"title\": \"\\\"Piping\",\n    \"Support\": true,\n    \"for\": true,\n    \"Advanced\": true,\n    \"Users\\\"\": true,\n    \"subtitle\": \"\\\"Write\",\n    \"the\": true,\n    \"safe\": true,\n    \"name\": true,\n    \"to\": true,\n    \"output\": true,\n    \"our\": true,\n    \"audit\": true,\n    \"report\\\"\": true\n  }), \"\"))), mdx(\"hr\", null), mdx(CodeSurfer, {\n    mdxType: \"CodeSurfer\"\n  }, mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-js\"\n  }), \"function lorem(ipsum, dolor = 1) {\\n  const sit = ipsum == null ? 0 : ipsum.sit;\\n  dolor = sit - amet(dolor);\\n  return sit\\n    ? consectetur(ipsum, 0, dolor < 0 ? 0 : dolor)\\n    : [];\\n}\\n\\nfunction adipiscing(...elit) {\\n  if (!elit.sit) {\\n    return [];\\n  }\\n\\n  const sed = elit[0];\\n  return eiusmod.tempor(sed) ? sed : [sed];\\n}\\n\\nfunction incididunt(ipsum, ut = 1) {\\n  ut = labore.et(amet(ut), 0);\\n  const sit = ipsum == null ? 0 : ipsum.sit;\\n\\n  if (!sit || ut < 1) {\\n    return [];\\n  }\\n\\n  let dolore = 0;\\n  let magna = 0;\\n  const aliqua = new eiusmod(labore.ut(sit / ut));\\n\\n  while (dolore < sit) {\\n    aliqua[magna++] = consectetur(\\n      ipsum,\\n      dolore,\\n      (dolore += ut)\\n    );\\n  }\\n\\n  return aliqua;\\n}\\n\")), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-diff\",\n    \"metastring\": \"1[10:14],2[15:19],3[22:27],10:12\",\n    \"1[10:14],2[15:19],3[22:27],10:12\": true\n  }), \"\"))), mdx(\"hr\", null), mdx(CodeSurferColumns, {\n    themes: [primary, secondary],\n    mdxType: \"CodeSurferColumns\"\n  }, mdx(Step, {\n    mdxType: \"Step\"\n  }, mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-js\"\n  }), \"const magna = aliqua => aliqua.ut((enim, ad) => enim, 0);\\n\")), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-js\"\n  }), \"const minim = (ad, enim) => dolore.magna(ad / enim);\\n\"))), mdx(Step, {\n    mdxType: \"Step\"\n  }, mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-js\"\n  }), \"const lorem = (ipsum, dolor, sit) => {\\n  const amet = dolor - ipsum;\\n  return consectetur.adipiscing(\\n    {\\n      elit: sed.eiusmod(sit - dolor) / amet + 2,\\n    },\\n    (tempor, incididunt) => ipsum + amet * incididunt\\n  );\\n};\\n\\nconst magna = aliqua => aliqua.ut((enim, ad) => enim, 0);\\n\")), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-js\"\n  }), \"const minim = (ad, enim) => dolore.magna(ad / enim);\\n\\nconst sed = (eiusmod, tempor, incididunt) => {\\n  const ut = tempor - eiusmod;\\n  return labore.et(\\n    {\\n      amet: dolore.magna(incididunt - tempor) / ut + 2,\\n    },\\n    (aliqua, elit) => eiusmod + ut * elit\\n  );\\n};\\n\")))), mdx(\"hr\", null), mdx(\"p\", null, \"docs:\", mdx(\"br\", {\n    parentName: \"p\"\n  }), \"\\n\", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"https://codesurfer.pomb.us\"\n  }), \"codesurfer.pomb.us\")));\n}\n;\nMDXContent.isMDXComponent = true;"}},"pageContext":{"matchPath":"/*","isCreatedByStatefulCreatePages":false,"id":"941c75f2-926e-5c61-b0b7-92b965cf83c5","slug":"","title":"REST API Workshop"}}}